import pathlib

# function that condenses path string
# if it exceeds 85 characters
def condense_path(path):
    max_length = 85
    length = len(path)
    if length > max_length:
        temp = pathlib.Path(path)
        start = temp.parts[0]+temp.parts[1]+"..."
        end = path[len(start)+(length-max_length):]
        path = str(start+end).replace('\\','/')
    return path

# function that formats string to
# provide broader search results
def format_search_string(searchStr):
    search_string = ''.join(searchStr.split()).lower()
    return search_string

# function that returns a rainbow color table
# (credit: @Korozin for values)
def get_color_table():
    color_table = (
        '#009E54', '#039F54', '#0AA153', '#10A352', '#16A551', '#1DA750', '#23A84F', '#2AAA4E', '#30AC4D', '#37AE4C', 
        '#3DB04B', '#43B24A', '#4AB449', '#50B648', '#57B847', '#5DBA46', '#64BC45', '#6ABD44', '#70BF43', '#77C142', 
        '#7DC341', '#84C540', '#8AC73F', '#90C93E', '#97CB3D', '#9DCD3C', '#A4CF3B', '#AAD03A', '#B1D239', '#B7D438', 
        '#BDD637', '#C4D836', '#CADA35', '#D1DC34', '#D7DE33', '#DEE032', '#E4E231', '#EAE330', '#F1E52F', '#F7E72E', 
        '#FDE92D', '#FCE42D', '#FCDF2D', '#FCDA2D', '#FBD62D', '#FBD12D', '#FACC2D', '#FAC72D', '#F9C32D', '#F9BE2D', 
        '#F8B92D', '#F8B42D', '#F7B02D', '#F7AB2D', '#F7A62D', '#F6A12D', '#F69D2D', '#F5982D', '#F5932D', '#F48E2D', 
        '#F48A2E', '#F3852E', '#F3802E', '#F27B2E', '#F2772E', '#F2722E', '#F16D2E', '#F1682E', '#F0642E', '#F05F2E', 
        '#EF5A2E', '#EF552E', '#EE512E', '#EE4C2E', '#ED472E', '#ED422E', '#ED3E2E', '#EC392E', '#EC342E', '#EB2F2E', 
        '#EA2E30', '#EA2D32', '#E92C34', '#E82C36', '#E72B39', '#E62B3B', '#E52A3D', '#E52940', '#E42942', '#E32844', 
        '#E22746', '#E12749', '#E0264B', '#E0264D', '#DF2550', '#DE2452', '#DD2454', '#DC2356', '#DB2359', '#DB225B', 
        '#DA215D', '#D92160', '#D82062', '#D72064', '#D61F66', '#D51E69', '#D51E6B', '#D41D6D', '#D31D70', '#D21C72', 
        '#D11B74', '#D01B76', '#D01A79', '#CF197B', '#CE197D', '#CD1880', '#CC1882', '#CB1784', '#CB1686', '#C91688', 
        '#C51788', '#C11889', '#BD1989', '#B9198A', '#B61A8A', '#B21B8A', '#AE1C8B', '#AA1C8B', '#A61D8B', '#A21E8C', 
        '#9E1F8C', '#9B1F8C', '#97208D', '#93218D', '#8F228D', '#8B228E', '#87238E', '#83248F', '#80258F', '#7C258F', 
        '#782690', '#742790', '#702890', '#6C2991', '#682991', '#652A91', '#612B92', '#5D2C92', '#592C92', '#552D93', 
        '#512E93', '#4D2F93', '#4A2F94', '#463094', '#423195', '#3E3295', '#3A3295', '#363396', '#323496', '#313798', 
        '#303A9A', '#2E3D9B', '#2D3F9D', '#2C429F', '#2B45A1', '#2948A3', '#284BA5', '#274EA6', '#2551A8', '#2454AA', 
        '#2357AC', '#225AAE', '#205DB0', '#1F60B2', '#1E63B3', '#1D66B5', '#1B69B7', '#1A6CB9', '#196FBB', '#1772BD', 
        '#1674BF', '#1577C0', '#147AC2', '#127DC4', '#1180C6', '#1083C8', '#0F86CA', '#0D89CC', '#0C8CCD', '#0B8FCF', 
        '#0A92D1', '#0895D3', '#0798D5', '#069BD7', '#049ED8', '#03A0DA', '#02A3DC', '#01A6DE', '#01A6DE', '#02A3DC', 
        '#03A0DA', '#049ED8', '#069BD7', '#0798D5', '#0895D3', '#0A92D1', '#0B8FCF', '#0C8CCD', '#0D89CC', '#0F86CA', 
        '#1083C8', '#1180C6', '#127DC4', '#147AC2', '#1577C0', '#1674BF', '#1772BD', '#196FBB', '#1A6CB9', '#1B69B7', 
        '#1D66B5', '#1E63B3', '#1F60B2', '#205DB0', '#225AAE', '#2357AC', '#2454AA', '#2551A8', '#274EA6', '#284BA5', 
        '#2948A3', '#2B45A1', '#2C429F', '#2D3F9D', '#2E3D9B', '#303A9A', '#313798', '#323496', '#363396', '#3A3295', 
        '#3E3295', '#423195', '#463094', '#4A2F94', '#4D2F93', '#512E93', '#552D93', '#592C92', '#5D2C92', '#612B92', 
        '#652A91', '#682991', '#6C2991', '#702890', '#742790', '#782690', '#7C258F', '#80258F', '#83248F', '#87238E', 
        '#8B228E', '#8F228D', '#93218D', '#97208D', '#9B1F8C', '#9E1F8C', '#A21E8C', '#A61D8B', '#AA1C8B', '#AE1C8B', 
        '#B21B8A', '#B61A8A', '#B9198A', '#BD1989', '#C11889', '#C51788', '#C91688', '#CB1686', '#CB1784', '#CC1882', 
        '#CD1880', '#CE197D', '#CF197B', '#D01A79', '#D01B76', '#D11B74', '#D21C72', '#D31D70', '#D41D6D', '#D51E6B', 
        '#D51E69', '#D61F66', '#D72064', '#D82062', '#D92160', '#DA215D', '#DB225B', '#DB2359', '#DC2356', '#DD2454', 
        '#DE2452', '#DF2550', '#E0264D', '#E0264B', '#E12749', '#E22746', '#E32844', '#E42942', '#E52940', '#E52A3D', 
        '#E62B3B', '#E72B39', '#E82C36', '#E92C34', '#EA2D32', '#EA2E30', '#EB2F2E', '#EC342E', '#EC392E', '#ED3E2E', 
        '#ED422E', '#ED472E', '#EE4C2E', '#EE512E', '#EF552E', '#EF5A2E', '#F05F2E', '#F0642E', '#F1682E', '#F16D2E', 
        '#F2722E', '#F2772E', '#F27B2E', '#F3802E', '#F3852E', '#F48A2E', '#F48E2D', '#F5932D', '#F5982D', '#F69D2D', 
        '#F6A12D', '#F7A62D', '#F7AB2D', '#F7B02D', '#F8B42D', '#F8B92D', '#F9BE2D', '#F9C32D', '#FAC72D', '#FACC2D', 
        '#FBD12D', '#FBD62D', '#FCDA2D', '#FCDF2D', '#FCE42D', '#FDE92D', '#F7E72E', '#F1E52F', '#EAE330', '#E4E231', 
        '#DEE032', '#D7DE33', '#D1DC34', '#CADA35', '#C4D836', '#BDD637', '#B7D438', '#B1D239', '#AAD03A', '#A4CF3B', 
        '#9DCD3C', '#97CB3D', '#90C93E', '#8AC73F', '#84C540', '#7DC341', '#77C142', '#70BF43', '#6ABD44', '#64BC45', 
        '#5DBA46', '#57B847', '#50B648', '#4AB449', '#43B24A', '#3DB04B', '#37AE4C', '#30AC4D', '#2AAA4E', '#23A84F', 
        '#1DA750', '#16A551', '#10A352', '#0AA153', '#039F54', '#009E54', '#009E54'
    )
    return color_table